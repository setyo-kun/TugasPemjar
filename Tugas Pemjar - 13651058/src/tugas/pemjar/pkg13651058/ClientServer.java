/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tugas.pemjar.pkg13651058;

import com.sun.istack.internal.logging.Logger;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import sun.util.logging.PlatformLogger;

/**
 *
 * @author PISCA PRASETYO A W
 */
public class ClientServer extends javax.swing.JFrame implements Runnable{
    Socket client;
    ServerSocket server;
    BufferedReader Server_Reader, Client_Reader;
    BufferedWriter Server_Writer, Client_Writer;
    /**
     * Creates new form ClientServer
     */
    public ClientServer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCBServer = new javax.swing.JComboBox<>();
        jButtonOn = new javax.swing.JButton();
        jTextUsername = new javax.swing.JTextField();
        LChat = new java.awt.List();
        jTextChat = new javax.swing.JTextField();
        jButtonSend = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Chat Apps - Client Server");

        jCBServer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SERVER", "CLIENT" }));
        jCBServer.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBServerItemStateChanged(evt);
            }
        });
        jCBServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBServerActionPerformed(evt);
            }
        });

        jButtonOn.setText("ON");
        jButtonOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOnActionPerformed(evt);
            }
        });

        jTextUsername.setText("USERNAME");

        jTextChat.setText("Insert Message. . .");

        jButtonSend.setText("SEND");
        jButtonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LChat, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCBServer, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonOn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextChat, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSend, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonOn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBServer, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LChat, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextChat)
                    .addComponent(jButtonSend, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        private void client_connection() {
    try {
    String ip = JOptionPane.showInputDialog("Masukan IP Address :");
    client = new Socket(ip, 2000);
    jCBServer.setEnabled(false);
    Server_Reader = new BufferedReader(new
    InputStreamReader(client.getInputStream()));    
    Server_Writer = new BufferedWriter(new OutputStreamWriter(client.getOutputStream()));
    jButtonOn.setText("DISCONNECT");
 } catch (UnknownHostException ex) {
    System.out.println("Accept Failed");
    System.exit(-1);
 } catch (IOException ex) {
    java.util.logging.Logger.getLogger(ClientServer.class.getName()).log(Level.SEVERE, null, ex);
    }
   }
    
    private void read_connection(){
        try{
            try{
                try{
                    server = new ServerSocket(2000);
                    this.setTitle("Please Wait...");
                }catch (IOException ex){
                    System.out.println("Could not listen");
                    System.exit(-1);
                }
                client = server.accept();
                this.setTitle("CONNECTED"+client.getInetAddress());
            }catch (IOException ex){
                System.out.println("Accept Failed");
                System.exit(-1);
            }
            Server_Reader = new BufferedReader(new InputStreamReader(client.getInputStream()));
            Server_Writer = new BufferedWriter (new OutputStreamWriter(client.getOutputStream()));
        }catch (IOException ex){
            System.out.println("Read Failed");
            System.exit(-1);
        }
    }
    
    private void disconnected_by_client() {
        try{
            client.close();
            Server_Reader.close();
            Server_Writer.close();
            jCBServer.setEnabled(true);
            jButtonOn.setText("CONNECT");
        }catch (IOException ex){
            java.util.logging.Logger.getLogger(ClientServer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void stopped_by_server(){
        try{
            Server_Reader.close();
            Server_Writer.close();
            jButtonOn.setText("O N");
            setTitle("DISCONNECT");
        }catch (IOException ex){
            java.util.logging.Logger.getLogger(ClientServer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void jCBServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBServerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBServerActionPerformed

    private void jButtonOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOnActionPerformed
       if (jButtonOn.getText().equals("CONNECT")){
           jButtonOn.setText("DISCONNECT");
           client_connection();
           Thread thread = new Thread(this);
           thread.start();
       }else if (jCBServer.getSelectedItem().equals("SERVER")){
           jButtonOn.setText("O F F");
           read_connection();
           Thread thread = new Thread(this);
           thread.start();
       }
    }//GEN-LAST:event_jButtonOnActionPerformed

    private void jButtonSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSendActionPerformed
        try{
            Server_Writer.write(jTextUsername.getText() + ": "+jTextChat.getText());
            Server_Writer.newLine();
            Server_Writer.flush();
        }catch (IOException  ex){
            java.util.logging.Logger.getLogger(ClientServer.class.getName()).log(Level.SEVERE, null, ex);
        }
        LChat.add("ME : " + jTextChat.getText());
        jTextChat.setText("");
    }//GEN-LAST:event_jButtonSendActionPerformed

    private void jCBServerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBServerItemStateChanged
       if(jCBServer.getSelectedItem().equals("SERVER")){
           jButtonOn.setText("O N");
           jTextUsername.setText("SERVER");
       }else{
           jButtonOn.setText("CONNECT");
           jTextUsername.setText("CLIENT");
       }
    }//GEN-LAST:event_jCBServerItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientServer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.List LChat;
    private javax.swing.JButton jButtonOn;
    private javax.swing.JButton jButtonSend;
    private javax.swing.JComboBox<String> jCBServer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextChat;
    private javax.swing.JTextField jTextUsername;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        try {
            LChat.add(Server_Reader.readLine());
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(ClientServer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
